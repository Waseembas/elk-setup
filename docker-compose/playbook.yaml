---
- hosts: server2
  become: yes
  vars_files:
    - vars/default.yaml

  tasks:

#main control

  - name: Creates directory for elk
    file:
     path: elk
     state: directory

  - name: Creates directory for data es cluster
    file:
      path: elk/data
      state: directory   

  - name: generating main docker compose file using Jinja2
    template:
      src: templates/elasticsearch.j2
      dest: elk/docker-compose.yml


  - name: Create instance using Jinja2
    template:
      src: templates/instances.j2
      dest: elk/instances.yml


#elastic


  - name: Creates directory for elastic
    file:
     path: elk/elastic
     state: directory

  - name: Copy Dockerfile
    copy: src=elastic/Dockerfile dest=elk/elastic

  - name: Copy elasticsearch.yml
    copy: src=elastic/elasticsearch.yml dest=elk/elastic


  - name: Build elastic image
    docker_image:
       path: elk/elastic
       buildargs:
        VERSION: "{{ elastic_version }}"
        PASSWORD: "{{ elastic_password }}"
       name: "{{ image_elastic }}"
       tag: "{{ tag_elastic }}"


#kibana

  - name: Creates directory for kibana
    file:
     path: elk/kibana
     state: directory

  - name: Copy Dockerfile
    copy: src=kibana/Dockerfile dest=elk/kibana

  - name: Copy elasticsearch.yml
    copy: src=kibana/kibana.yml dest=elk/kibana

  - name: Copy passwords.sh
    copy: src=kibana/password.sh dest=elk/kibana


  - name: Build kibana image
    docker_image:
       path: elk/kibana
       buildargs:
        VERSION: "{{ kibana_version }}"
        PASSWORD: "{{ kibana_password }}"
       name: "{{ image_kibana }}"
       tag: "{{tag_kibana }}"





#kibana

  - name: Creates directory for logstash
    file:
     path: elk/logstash
     state: directory

  - name: Copy Dockerfile
    copy: src=logstash/Dockerfile dest=elk/logstash

  - name: Copy logstash.conf
    copy: src=logstash/logstash.conf dest=elk/logstash

  - name: Copy logstash .yml
    copy: src=logstash/logstash.yml dest=elk/logstash


  - name: Build logstash image
    docker_image:
       path: elk/logstash
       name: "{{ image_logstash }}"
       tag: "{{ tag_logstash }}"
###promethus


  - name: Creates directory for promethus
    file:
      path: elk/prometheus
      state: directory

  - name: Copy Dockerfile
    copy: src=prometheus/prometheus.yml dest=elk/prometheus

#https://sbcode.net/grafana/elasticsearch-cluster/

#starting main app
  - name: start docker-compose
    docker_compose:
      project_src: elk/
      state: present


#


  - name: enable repo path for backups
    uri:
      url: https://localhost:9200/_snapshot/my_repository              
      method: PUT
      url_username: elastic
      url_password: "Test@1234"
      body: '{  "type": "fs",  "settings": {    "location": "/data",    "compress": true  }}'                                                                                                       
      body_format: json
    environment:
      SSL_CERT_FILE: /home/ubuntu/elk/certs/ca/ca.crt


  - name: enable slm backup policy 
    uri:
      url: https://localhost:9200/_slm/policy/nightly-snapshots?pretty
      method: PUT
      url_username: elastic
      url_password: "Test@1234"
      body: '{"name": "<daily-snapshot-{now/d}>","schedule": "0 45 23 * * ?","repository": "my_repository", "config": {"indices": "*", "include_global_state": true} ,"retention": {"expire_after": "30d","min_count": 1,"max_count": 31}}'
      body_format: json
#      HEADER_Content-Type: "application/json"
     #validate_certs: "no"
    environment:
      SSL_CERT_FILE: /home/ubuntu/elk/certs/ca/ca.crt

